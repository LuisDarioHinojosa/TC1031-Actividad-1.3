/*
 * Binnacle.cpp
 *
 *  Created on: 16 sep. 2020
 *      Author: luisd
 */

#include "Binnacle.h"
#include <iostream>
#include <sstream>
#include <fstream>
#include <iterator>
#include <algorithm>


Binnacle::Binnacle() {
	// TODO Auto-generated constructor stub

}

Binnacle::~Binnacle() {
	// TODO Auto-generated destructor stub
}






int Binnacle::encodePorts(std::string num){
	if (num == "-"){
		return -1;
	}
	else{
		return stoi(num);
	}
}



void Binnacle::showEntries(){
	for(std::vector<BinnacleLine>::iterator it = this->data.begin(); it != this->data.end(); it++){
		std::cout << (*it) << std::endl;
	}
}


void Binnacle::showTotalNumberOfEntries(){
	std::cout << "Total Entries: " << this->data.size() <<std::endl;
}

void Binnacle::readCsvLines(std::string filename){
	std::ifstream file(filename);
	if(file.fail()) throw std::runtime_error("Could not open file");


	std::string date,time, oIP, oPort, oName,dIP,dPort,dName,line;
	int numOport, numDport;

	while(std::getline(file, line)){
		std::stringstream ss(line);
		getline(ss,date,',');
		getline(ss,time,',');
		getline(ss,oIP,',');
		getline(ss,oPort,',');
		getline(ss,oName,',');
		getline(ss,dIP,',');
		getline(ss,dPort,',');
		getline(ss,dName,',');
		numOport = encodePorts(oPort);
		numDport = encodePorts(dPort);
		BinnacleLine entry(date,time,oIP,numOport,oName,dIP,numDport,dName);
		data.push_back(entry);
	}


	file.close();
}



void Binnacle::searchComputer(){
	std::vector<BinnacleLine> originNames;
	std::vector<BinnacleLine> destinyNames;


}


